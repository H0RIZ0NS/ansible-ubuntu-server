#!/usr/bin/bash

set -Eeu -o pipefail

apply_rule() {
  iptables "$@"
  ip6tables "$@"
}

# Reset all the tables and chains
apply_rule --table nat --flush
apply_rule --table mangle --flush
apply_rule --table raw --flush
apply_rule --flush
apply_rule --delete-chain

# Set DROP as global default policy
apply_rule --policy INPUT DROP
apply_rule --policy FORWARD DROP
apply_rule --policy OUTPUT DROP

# Drop invalid requests
apply_rule --append INPUT --match state --state INVALID --jump DROP

# Drop invalid TCP packets
apply_rule --append INPUT --protocol tcp --tcp-flags ALL ALL --jump DROP # XMAS
apply_rule --append INPUT --protocol tcp --tcp-flags ALL NONE --jump DROP # NULL
apply_rule --append INPUT --protocol tcp ! --syn --match state --state NEW --jump DROP

# Accept related, established and local requests
apply_rule --append INPUT --match state --state RELATED,ESTABLISHED --jump ACCEPT
apply_rule --append OUTPUT --match state --state RELATED,ESTABLISHED --jump ACCEPT
apply_rule --append INPUT --in-interface lo --jump ACCEPT
apply_rule --append OUTPUT --out-interface lo --jump ACCEPT

{% if firewall_flood_protection_enabled %}
# Accept (throttled) ping requests (IPv4)
iptables --new-chain PING_FLOOD_FILTER
iptables --append INPUT --protocol icmp --icmp-type echo-request --jump PING_FLOOD_FILTER
iptables --append PING_FLOOD_FILTER --match hashlimit --hashlimit-name PING_FLOOD --hashlimit-mode srcip --hashlimit-above 1/second --hashlimit-burst 2 --jump REJECT --reject-with icmp-admin-prohibited
iptables --append PING_FLOOD_FILTER --jump ACCEPT

# Accept (throttled) ping requests (IPv6)
ip6tables --new-chain PING_FLOOD_FILTER
ip6tables --append INPUT --protocol icmpv6 --icmpv6-type echo-request --jump PING_FLOOD_FILTER
ip6tables --append PING_FLOOD_FILTER --match hashlimit --hashlimit-name PING_FLOOD --hashlimit-mode srcip --hashlimit-above 1/second --hashlimit-burst 2 --jump REJECT --reject-with icmp6-adm-prohibited
ip6tables --append PING_FLOOD_FILTER --jump ACCEPT

# Basic TCP flood protection
apply_rule --append INPUT --protocol tcp --match connlimit --connlimit-above 20 --jump DROP
apply_rule --new-chain SYN_FLOOD_FILTER
apply_rule --append INPUT --protocol tcp --syn --jump SYN_FLOOD_FILTER
apply_rule --append SYN_FLOOD_FILTER --match hashlimit --hashlimit-name SYN_FLOOD --hashlimit-mode srcip --hashlimit-above 5/second --jump DROP

# Basic UDP flood protection
apply_rule --append INPUT --match hashlimit --hashlimit-name UDP_INPUT_FLOOD --hashlimit-above 20/second --jump DROP
apply_rule --append OUTPUT --match hashlimit --hashlimit-name UDP_OUTPUT_FLOOD --hashlimit-above 200/second --hashlimit-burst 10 --jump DROP
{% endif %}

# Authorized INPUT requests
apply_rule --append INPUT --protocol tcp --dport {{ globals.server_ssh_listening_port }} --jump ACCEPT # SSH

# Authorized OUTPUT requests
apply_rule --append OUTPUT --protocol icmp --jump ACCEPT # ICMP
apply_rule --append OUTPUT --protocol tcp --dport 22 --jump ACCEPT # SSH
apply_rule --append OUTPUT --protocol tcp --dport 25 --jump ACCEPT # SMTP
apply_rule --append OUTPUT --protocol tcp --dport 53 --jump ACCEPT # DNS (TCP)
apply_rule --append OUTPUT --protocol udp --dport 53 --jump ACCEPT # DNS (UDP)
apply_rule --append OUTPUT --protocol udp --dport 67 --jump ACCEPT # DHCP/BOOTP
apply_rule --append OUTPUT --protocol tcp --dport 80 --jump ACCEPT # HTTP
apply_rule --append OUTPUT --protocol udp --dport 123 --jump ACCEPT # NTP
apply_rule --append OUTPUT --protocol tcp --dport 443 --jump ACCEPT # HTTPS
apply_rule --append OUTPUT --protocol tcp --dport 465 --jump ACCEPT # SMTPS
apply_rule --append OUTPUT --protocol tcp --dport 587 --jump ACCEPT # SMTP
apply_rule --append OUTPUT --protocol tcp --dport 953 --jump ACCEPT # rDNS (TCP)
apply_rule --append OUTPUT --protocol udp --dport 953 --jump ACCEPT # rDNS (UDP)
apply_rule --append OUTPUT --protocol udp --dport 5353 --jump ACCEPT # mDNS

exit 0
