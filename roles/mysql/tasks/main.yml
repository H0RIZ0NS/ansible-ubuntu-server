- include_vars:
    file: ../../_globals/vars/main.yml
    name: globals

- import_tasks: _validation.yml

- name: Install MySQL dependencies
  apt:
    name:
      - mysql-server-8.0
      - python3-pymysql
    state: latest
    cache_valid_time: '{{ globals.apt_cache_valid_time }}'

- name: Copy the mysqldump config file
  copy:
    src: config/mysqldump.cnf
    dest: '{{ mysqldump_config_path }}'
    mode: '0644'

- name: Enable and start the MySQL service
  service:
    name: mysql
    state: started
    enabled: true

- name: Create the required MySQL databases
  mysql_db:
    name: '{{ item }}'
    state: present
    encoding: utf8mb4
    collation: utf8mb4_unicode_ci
    login_unix_socket: '{{ mysql_socket_path }}'
  with_items: '{{ mysql_databases }}'

- name: Create the required MySQL users and configure database ownership
  mysql_user:
    name: '{{ item.name }}'
    host: '%'
    state: present
    password: "{{ lookup('password', mysql_password_path_template|format(item.name)) }}"
    update_password: on_create
    priv: "{{ item.owned_databases|map('regex_replace', '$', '.*:ALL')|join('/') }}"
    column_case_sensitive: true # TODO: Remove when community.mysql v4.0.0 gets released
    login_unix_socket: '{{ mysql_socket_path }}'
  with_items: '{{ mysql_users }}'

- name: Open MySQL to the world if required
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^bind-address(\s+)='
    line: "bind-address\\1= {{ '0.0.0.0' if mysql_is_public else '127.0.0.1' }}"
    state: present
    backrefs: true
  notify: mysql_config_changed
